/*------------------------------------*/
/*  Functions */
/*------------------------------------*/

// Strip units
// 
// 

@function strip-units($number)
  @return $number / ($number * 0 + 1)


// Material drop shadow
// 
// Computes a top-shadow for a card effect.
// @param {Number} $depth - depth level
// @return {List}
// User for card() mixin
@function top-shadow($depth)
  $primary-offset: nth(1.5 3 10 14 19, $depth) * 1px
  $blur: nth(1.5 3 10 14 19, $depth) * 4px
  $color: rgba(black, nth(0.12 0.16 0.19 0.25 0.3, $depth))

  @return 0 $primary-offset $blur $color

/// Computes a bottom-shadow for a card effect.
/// @param {Number} $depth - depth level
/// @return {List}
@function bottom-shadow($depth)
  $primary-offset: nth(1.5 3 6 10 15, $depth) * 1px
  $blur: nth(1 3 3 5 6, $depth) * 4px
  $color: rgba(black, nth(0.24 0.23 0.23 0.22 0.22, $depth))

  @return 0 $primary-offset $blur $color




/**
 * Computes a CSS calc function that betweens a value from
 * A to B over viewport-width A to viewport-width B.
 * Requires a media query to cap the value at B.
 */

@function between($to, $from, $toWidth, $fromWidth)
  $slope: ($to - $from) / ($toWidth - $fromWidth)
  $base: $from - $slope * $fromWidth

  @return calc(#{$base} + #{100vw * $slope})



// Bootstrap 4
// 
// 

@function breakpoint-next($name, $bps: $breakpoints, $breakpoint-names: map-keys($bps))
  $n: index($breakpoint-names, $name)
  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null)

@function breakpoint-max($name, $bps: $breakpoints)
  $next: breakpoint-next($name, $breakpoints)
  @return if($next, breakpoint-min($next, $breakpoints) - 1px, null)

@function breakpoint-min($name, $bps: $breakpoints)
  $min: map-get($breakpoints, $name)
  @return if($min != 0, $min, null)

@function breakpoint-infix($name, $bps: $breakpoints)
  @return if(breakpoint-min($name, $bps) == null, "", "--#{$name}")




// Gradient background
// 
// Based on https://github.com/larsenwork/postcss-easing-gradients by Andreas Larsen.

$scrimStops: 0% 0%, 26.2% 19%, 45.9% 34%, 61.8% 47%, 72.2% 56.5%, 80.6% 65%, 87.4% 73%, 92.5% 80.2%, 95.8% 86.1%, 97.9% 91%, 99.2% 95.2%, 99.8% 98.2%, 100% 100%

@function getColorStop($colorTo, $colorFrom, $weight, $stop)
  @return mix($colorFrom, $colorTo, $weight) $stop

@function getColorStops($colorTo, $colorFrom)
  $stops: ()
  @each $scrimStop in $scrimStops
    $stops: append($stops, getColorStop($colorTo, $colorFrom, nth($scrimStop, 1), nth($scrimStop, 2)), comma)
 
  @return $stops


@function scrim-linear-gradient($args...)
  @if (length($args) == 2)
    @return linear-gradient(#{getColorStops(nth($args, 1), nth($args, 2))})

  @return linear-gradient(#{nth($args, 1)}, #{getColorStops(nth($args, 2), nth($args, 3))})

