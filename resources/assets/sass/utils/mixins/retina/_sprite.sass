@import compass/utilities/sprites

// Include compass sprite helpers
@import compass/css3/background-size

// Include helper to calc background size
@import compass/css3/inline-block

@import retina

// * Option variable to define the spacing between images in the generated sprite
$retina-sprite-spacing: 2px !default

$retina-sprite-names: 0
$retina-sprite-sprites: 0
$retina-sprite-urls: 0
$retina-sprite-sprites2x: 0
$retina-sprite-urls2x: 0

// * A mixin to create retina sprites with hover & active states
// *
// * You have to register a pair of sprites using `{@link #retina-sprite-add}` and then you can use this mixin:
// *
// *     @include retina-sprite-add(icons, "icons/*.png", "icons-retina/*.png");
// *
// *     .my-icon {
// *       @include retina-sprite(icon-name, icons);
// *     }
// *
// * @param {String} $name
// * @param {String} [$sprite-name]
// * @param {Boolean} [$hover=false]
// * @param {Boolean} [$active=false]

=retina-sprite($name, $sprite-name: 0, $dimensions: false, $hover: false, $active: false)
  $index: 2
  $len: length($retina-sprite-names)

  @for $i from $index through $len
    @debug $len

    @if $sprite-name == nth($retina-sprite-names, $i)
      $index: $i

  $sprite: nth($retina-sprite-sprites, $index)
  $sprite-url: nth($retina-sprite-urls, $index)

  $sprite2x: nth($retina-sprite-sprites2x, $index)
  $sprite-url2x: nth($retina-sprite-urls2x, $index)

  +_retina-sprite($name, $sprite, $sprite-url, $sprite2x, $sprite-url2x, $hover, $active, $dimensions)

@function retina-sprite-width($name, $sprite-name: 0)
  $index: 2
  $len: length($retina-sprite-names)

  @for $i from $index through $len
    @if $sprite-name == nth($retina-sprite-names, $i)
      $index: $i

  $sprite: nth($retina-sprite-sprites, $index)

  @return image-width(sprite-file($sprite, $name))

@function retina-sprite-height($name, $sprite-name: 0)
  $index: 2
  $len: length($retina-sprite-names)

  @for $i from $index through $len
    @if $sprite-name == nth($retina-sprite-names, $i)
      $index: $i

  $sprite: nth($retina-sprite-sprites, $index)

  @return image-height(sprite-file($sprite, $name))

// * @param {String} $name
// * @param {String} $path
// * @param {String} $path2x
=retina-sprite-add($name, $path, $path2x)
  $sprite: sprite-map($path, $spacing: $retina-sprite-spacing)
  $sprite2x: sprite-map($path2x, $spacing: $retina-sprite-spacing * 2)

  @if feature-exists(global-variable-shadowing)
    $retina-sprite-names: append($retina-sprite-names, $name) !default

    $retina-sprite-sprites: append($retina-sprite-sprites, $sprite) !default
    $retina-sprite-urls: append($retina-sprite-urls, sprite-url($sprite)) !default

    $retina-sprite-sprites2x: append($retina-sprite-sprites2x, $sprite2x) !default
    $retina-sprite-urls2x: append($retina-sprite-urls2x, sprite-url($sprite2x)) !default
  @else
    $retina-sprite-names: append($retina-sprite-names, $name) !global

    $retina-sprite-sprites: append($retina-sprite-sprites, $sprite) !global
    $retina-sprite-urls: append($retina-sprite-urls, sprite-url($sprite)) !global

    $retina-sprite-sprites2x: append($retina-sprite-sprites2x, $sprite2x) !global
    $retina-sprite-urls2x: append($retina-sprite-urls2x, sprite-url($sprite2x)) !global

=_retina-sprite-bg-pos($sprite, $name, $pad, $multiplier: 1)
  $pos: sprite-position($sprite, $name, -$pad * $multiplier, -$pad * $multiplier)

  background-position: nth($pos, 1) (nth($pos, 2) / $multiplier)

=_retina-sprite($name, $sprite, $sprite-url, $sprite2x, $sprite-url2x, $hover, $active, $dimensions: true, $pad: 0)
  background-image: $sprite-url

  +_retina-sprite-bg-pos($sprite, $name, $pad)

  background-repeat: repeat-y

  @if $dimensions == true
    +sprite-dimensions($sprite, $name)

  @if $hover == true
    &:hover
      +_retina-sprite-bg-pos($sprite, $name + _hover, $pad)

  @if $active == true
    &:active
      +_retina-sprite-bg-pos($sprite, $name + _active, $pad)

  @if $pad > 0
    padding: $pad

  +retina
    background-image: $sprite-url2x


    +background-size(ceil(image-width(sprite-path($sprite2x)) / 2) ceil(image-height(sprite-path($sprite2x)) / 2))


    +_retina-sprite-bg-pos($sprite2x, $name, $pad, 2)

    @if $hover == true
      &:hover
        +_retina-sprite-bg-pos($sprite2x, $name + _hover, $pad, 2)

    @if $active == true
      &:active
        +_retina-sprite-bg-pos($sprite2x, $name + _active, $pad, 2)
